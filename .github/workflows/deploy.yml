name: Deploy Landing Page

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Deploy serverless stack
        run: |
          npm run deploy --stack=${{ secrets.STACK_NAME }} --domain=${{ secrets.DOMAIN_NAME }} --email=${{ secrets.EMAIL_NOTIFICATION }} --cert=${{ secrets.CERTIFICATE_ARN }} --stage=${{ secrets.STAGE }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
      
      - name: Deploy static assets
        run: |
          npm run deploy:static --stack=${{ secrets.STACK_NAME }} --stage=${{ secrets.STAGE }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
      
      - name: Deploy e-book to private bucket
        run: |
          npm run deploy:ebook --stack=${{ secrets.STACK_NAME }} --stage=${{ secrets.STAGE }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
      
      - name: Invalidate CloudFront cache
        run: |
          npm run invalidate-cache --stack=${{ secrets.STACK_NAME }} --domain=${{ secrets.DOMAIN_NAME }} --stage=${{ secrets.STAGE }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
